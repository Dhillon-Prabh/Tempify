const express = require('express');
const isAuth = require('../middleware/is-auth');
const authController = require('../controllers/authController');
const profileController = require('../controllers/profileController');
const emailController = require('../controllers/emailController');
const payController = require('../controllers/payController');
const gigController = require('../controllers/gigController')
const eventController = require('../controllers/eventController');
const adminController = require('../controllers/adminController');
const recordsController = require('../controllers/recordsController')
const registerController = require('../controllers/registerController');

const router = express.Router();

/**
 * Routers that connect frontend and backend.
 * 
 * @author Joe Fong
 * @author John Ham
 * @author Prabhdeep Singh
 * @version 1.0
 */

 /** Login. */
router.post('/login', authController.postLogin);
/** Sends an email based on info from the Contact Us section. */
router.post('/email', emailController.contactUsEmail);

/** Registers a temp and sends an email to the temp and admin. */
router.post('/tempRegister', registerController.tempRegister, emailController.tempRegisterEmail);
/** Registers a dental office and sends an email to the dental office and admin. */
router.post('/dentalRegister', registerController.dentalRegister, emailController.dentalRegisterEmail);

/** Gets a token generated by Braintree. */
router.get('/payment', payController.getToken);
/** Performs payment transaction. */
router.post('/checkout', payController.checkout);
/** Gets gig details. */
router.post('/getGigDetails', payController.getGigDetails);

/** Gets temp profile information. */
router.get('/tempProfile', isAuth, profileController.tempProfile);
/** Updates the temp profile. */
router.post('/tempUpdateProfile',isAuth, profileController.tempUpdateProfile);
/** Gets dental office profile information. */
router.post('/dentalProfile', isAuth, profileController.dentalProfile);
/** Updates the dental office profile. */
router.post('/dentalUpdateProfile', isAuth, profileController.dentalUpdateProfile);
/** Creates a new office for a dental office. */
router.post('/dentalInsertProfile', isAuth, profileController.dentalInsertProfile);

/** Gets temp dashboard. */
router.get('/tempDashboard', isAuth, authController.getTempDashboardInformation);
/** Posts a gig and sends an email to relevant temps. */
router.post('/postGig', isAuth, gigController.postGig, emailController.gigPostedEmail);
/** Gets posted jobs. */
router.get('/jobPosting', isAuth, gigController.jobPosting);
/** Gets temp gig card information. */
router.put('/gigCard', isAuth, gigController.gigCard);
/** Gets gig information for dental offices. */
router.put('/gigCardOffice', isAuth, gigController.gigCardOffice);
/** Accepts a gig and sends email to associated dental office. */
router.post('/acceptGig', isAuth, gigController.acceptGig, emailController.gigAcceptedEmail);
/** Gets all events to be shown on temp schedule. */
router.put('/getEvents', isAuth, eventController.getEvents);
/** Gets all events to be shown on dental office schedule. */
router.put('/getEventsOffice', isAuth, eventController.getEventsOffice);
/** Adds time worked for a gig and sends email to associated dental office. */
router.post('/addTime', isAuth, gigController.addTime, emailController.addTimeEmail);
/** Gets gig records. */
router.post('/getRecords', isAuth, recordsController.getRecords);

/** Gets payment information for the admin page. */
router.get('/admin', adminController.tempData);
/** Confirms payment for a payment period. */
router.get('/adminConfirmPayment', adminController.confirmPayment);

module.exports = router;